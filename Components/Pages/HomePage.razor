@page "/"
@using SchoolWebApp.Components.Services;
@inject ITaskService TaskService;
@rendermode InteractiveServer

<div class="viewContainer">
    <div class="scrollView">
        @foreach (taskItem taskItem in taskList) {
            <div class="taskItem">
                <div class="editButton">
                    <h1 class="title">@taskItem.title</h1>
                    <p class="description">@taskItem.description</p>
                    <button type="submit" class="imageButton" id="checkmark">
                        <img src="images/checkmark.svg" height="100px" width="100px">
                    </button>
                    <button type="submit" class="imageButton" id="edit">
                        <img src="images/edit_icon.svg" height="100px" width="100px">
                    </button>
                    <button type="submit" class="imageButton" id="delete" @onclick="() => DeleteTask(taskItem)">
                        <img src="images/trashcan.svg" height="100px" width="100px">
                    </button>
                </div>
            </div>
        }
        <div class="fillerItem"></div>
        <button class="imageButton" id="addTaskButton" @onclick="() => ShowAddTaskPopupToggle()">
            <img src="/images/plus_sign.svg" style="height: 70%; width: 70%;">
        </button>
    </div>
</div>
@if (showAddTaskPopup)
{
    <div style="height: 100%;  width: 100%; background-color:black; position: fixed; top: 0; left:0; opacity: 0.8;">
    </div>
    <div class="addTaskPopup">
        <div class="textInputContainer" style="height: 20%;">
            <textarea id="titleInput" class="textInput" placeholder="Here goes your new task title" @bind="newTitle" @bind:event="oninput" />
        </div>
        <div class="textInputContainer" style="height: 77%; margin-top: 3%;">
            <textarea class="textInput" placeholder="Here goes your new task description" @bind="newDescription" @bind:event="oninput"/>
        </div>
        <button type="submit" class="imageButton" id="cancelAddingTaskButton" @onclick="() => ShowAddTaskPopupToggle()">
            <img src="images/cancel_button.svg" height="100px" width="100px">
        </button>
        <button type="submit" class="imageButton" id="submitTaskButton" @onclick="() => AddTask()">
            <img src="images/checkmark.svg" height="100px" width="100px">
        </button>
    </div>
}
@code {
    public record taskItem(string title, string description);
    public bool showAddTaskPopup = false;
    private List<taskItem> taskList { get; set; } = new List<taskItem>();
    public string? newTitle;
    public string? newDescription;

    protected override void OnInitialized()
    {
        Console.WriteLine("Initializing HomePage");
        taskList = TaskService.GetTaskList();
    }

    public void TasksChanged()
    {
        taskList = TaskService.GetTaskList();
        StateHasChanged();
    }
    public void DeleteTask(taskItem task)
    {
        Console.WriteLine("Deleting task: " + task.title);
        TaskService.Delete(task);
        TasksChanged();
    }
    public void ShowAddTaskPopupToggle() {
        showAddTaskPopup = !showAddTaskPopup;
        StateHasChanged();
    }
    public void AddTask()
    {
        TaskService.Add(new taskItem(newTitle!,newDescription!));
        taskList = TaskService.GetTaskList();
        showAddTaskPopup = false;
        TasksChanged();
    }
}